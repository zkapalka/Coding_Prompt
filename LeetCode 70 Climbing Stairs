//URL: https://leetcode.com/problems/climbing-stairs/

//SOLUTION: 
class Solution {
  public int climbStairs(int n) {
    // dp[i] := the number of ways to climb to the i-th stair
    // Create an array dp to store the number of ways to reach each step
    int[] dp = new int[n + 1];

    // There is one way to reach the 0-th stair (by doing nothing)
    dp[0] = 1;

    // There is one way to reach the 1st stair (a single step)
    dp[1] = 1;

    // Fill the dp array for steps from 2 to n
    for (int i = 2; i <= n; ++i) {
      // The number of ways to reach the i-th stair is the sum of the ways to reach
      // the (i-1)-th stair and the (i-2)-th stair
      dp[i] = dp[i - 1] + dp[i - 2];
    }

    // The number of ways to reach the n-th stair is stored in dp[n]
    return dp[n];
  }
}
